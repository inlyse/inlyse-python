name: Semantic Release

on:
  push:
    branches: [ main ]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

env:
 semantic_release: 'npx --yes
	-p semantic-release
	-p @semantic-release/commit-analyzer
	-p @semantic-release/release-notes-generator
	-p @semantic-release/changelog
	-p @semantic-release/exec
	-p @semantic-release/github
	-p @semantic-release/git
	-p @google/semantic-release-replace-plugin
	semantic-release'

jobs:
  release:
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
           node-version: "lts/*"

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: 'poetry'

      - name: Install dependencies
        run: |
          poetry install --with docs

      - name: Test Release
        if: ${{ github.event_name != 'workflow_dispatch' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            $semantic_release --dry

      - name: Release
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: inlyse-bot
          GIT_AUTHOR_EMAIL: info@inlyse.com
          GIT_COMMITTER_NAME: inlyse-bot
          GIT_COMMITTER_EMAIL: info@inlyse.com
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
            poetry config pypi-token.pypi ${PYPI_TOKEN}
            $semantic_release --ci

      - name: Build new documentation
        working-directory: ./docs
        run: |
            poetry run make html

      - name: Publish new documentation
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: inlyse/inlyse-documentation
          publish_dir: ./docs/build/html/
          destination_dir: python
          keep_files: true
